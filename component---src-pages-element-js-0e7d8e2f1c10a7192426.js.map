{"version":3,"sources":["webpack:///component---src-pages-element-js-0e7d8e2f1c10a7192426.js","webpack:///./src/pages/element.js"],"names":["webpackJsonp","235","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","pageQuery","undefined","_react","_react2","_reactBsGrid","_reactBodyClassname","_reactBodyClassname2","_reactHelmet","_reactHelmet2","_reactFeather","_element","_gatsbyLink","_gatsbyLink2","_reactWindowSize","_reactWindowSize2","_get","_get2","_reactFab","_Space","_Space2","_Title","_Title2","_Page","_Page2","_constants","Element","_Component","this","apply","arguments","componentDidMount","Prism","highlightAll","getSideLength","windowWidth","props","sideLength","getDocs","edges","html","filter","edge","node","indexOf","slice","scrollTo","key","document","querySelector","scrollIntoView","behavior","block","inline","render","height","createElement","className","fluid","name","title","meta","property","content","charSet","Fab","style","right","bottom","FabButton","onClick","ChevronUp","Container","Row","Col","lg","to","half","md","sm","Svg","width","Arc","innerRadius","outerRadius","startAngle","Math","PI","endAngle","fill","COLORS","DARK_GREY","transform","translate","Area","x","d","y1","y0","points","AreaRadial","angle","Circle","cx","cy","r","Line","x1","x2","y2","stroke","strokeWidth","LineRadial","Rect","y","Ribbon","source","radius","target","SymbolShape","type","size","Text","dx","dy","fontSize","textAnchor","alignmentBaseline","dangerouslySetInnerHTML","__html","Component"],"mappings":"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","file":"component---src-pages-element-js-0e7d8e2f1c10a7192426.js","sourcesContent":["webpackJsonp([65745867884573],{\n\n/***/ 235:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactBsGrid = __webpack_require__(34);\n\t\n\tvar _reactBodyClassname = __webpack_require__(33);\n\t\n\tvar _reactBodyClassname2 = _interopRequireDefault(_reactBodyClassname);\n\t\n\tvar _reactHelmet = __webpack_require__(26);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _reactFeather = __webpack_require__(75);\n\t\n\tvar _element = __webpack_require__(54);\n\t\n\tvar _gatsbyLink = __webpack_require__(74);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactWindowSize = __webpack_require__(53);\n\t\n\tvar _reactWindowSize2 = _interopRequireDefault(_reactWindowSize);\n\t\n\tvar _get = __webpack_require__(103);\n\t\n\tvar _get2 = _interopRequireDefault(_get);\n\t\n\tvar _reactFab = __webpack_require__(105);\n\t\n\tvar _Space = __webpack_require__(36);\n\t\n\tvar _Space2 = _interopRequireDefault(_Space);\n\t\n\tvar _Title = __webpack_require__(84);\n\t\n\tvar _Title2 = _interopRequireDefault(_Title);\n\t\n\tvar _Page = __webpack_require__(35);\n\t\n\tvar _Page2 = _interopRequireDefault(_Page);\n\t\n\tvar _constants = __webpack_require__(85);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global graphql */\n\t\n\t\n\tvar Element = function (_Component) {\n\t  _inherits(Element, _Component);\n\t\n\t  function Element() {\n\t    _classCallCheck(this, Element);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  Element.prototype.componentDidMount = function componentDidMount() {\n\t    if (Prism) Prism.highlightAll();\n\t  };\n\t\n\t  Element.prototype.getSideLength = function getSideLength() {\n\t    var windowWidth = this.props.windowWidth;\n\t\n\t    var sideLength = 340;\n\t    if (windowWidth < 1200) sideLength = 270;\n\t    if (windowWidth < 992) sideLength = 210;\n\t    if (windowWidth < 768) sideLength = 258;\n\t    if (windowWidth < 570) sideLength = windowWidth - 100;\n\t    if (windowWidth === 0) sideLength = 340;\n\t    return sideLength;\n\t  };\n\t\n\t  Element.prototype.getDocs = function getDocs() {\n\t    var edges = (0, _get2.default)(this.props, 'data.allMarkdownRemark.edges');\n\t    if (!edges) return '';\n\t    var html = edges.filter(function (edge) {\n\t      return edge.node.html.indexOf('name=\"elements\"') > -1;\n\t    })[0].node.html;\n\t\n\t    return html.slice(html.indexOf('<h2>'));\n\t  };\n\t\n\t  Element.prototype.scrollTo = function scrollTo(key) {\n\t    return function () {\n\t      document.querySelector('[name=\"elements__' + key + '\"]').scrollIntoView({\n\t        behavior: 'smooth',\n\t        block: 'center',\n\t        inline: 'nearest'\n\t      });\n\t    };\n\t  };\n\t\n\t  Element.prototype.render = function render() {\n\t    var sideLength = this.getSideLength();\n\t    var height = sideLength / 3 * 2;\n\t    return _react2.default.createElement(\n\t      _reactBodyClassname2.default,\n\t      { className: 'no-padding' },\n\t      _react2.default.createElement(\n\t        _Page2.default,\n\t        { fluid: true, name: 'page-build' },\n\t        _react2.default.createElement(_reactHelmet2.default, {\n\t          title: 'Potion.js - React + D3',\n\t          meta: [{\n\t            property: 'og:url',\n\t            content: 'http://numberpicture.com/build'\n\t          }, {\n\t            property: 'og:title',\n\t            content: 'Potion.js - React + D3'\n\t          }, {\n\t            property: 'og:description',\n\t            content: 'Low-level React components for declaratively composing animated, interactive SVG visualizations.'\n\t          }, {\n\t            name: 'twitter:title',\n\t            content: 'Potion.js - React + D3'\n\t          }, {\n\t            name: 'twitter:description',\n\t            content: 'Low-level React components for declaratively composing animated, interactive SVG visualizations.'\n\t          }, {\n\t            charSet: 'utf-8'\n\t          }]\n\t        }),\n\t        _react2.default.createElement(\n\t          _reactFab.Fab,\n\t          { style: { right: '20px', bottom: '20px' } },\n\t          _react2.default.createElement(\n\t            _reactFab.FabButton,\n\t            null,\n\t            _react2.default.createElement(\n\t              'a',\n\t              { onClick: this.scrollTo('top') },\n\t              _react2.default.createElement(_reactFeather.ChevronUp, null)\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactBsGrid.Container,\n\t          { fluid: true },\n\t          _react2.default.createElement(\n\t            _reactBsGrid.Row,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactBsGrid.Container,\n\t              null,\n\t              _react2.default.createElement(\n\t                _reactBsGrid.Row,\n\t                null,\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { lg: 12 },\n\t                  _react2.default.createElement('div', { name: 'elements__top' }),\n\t                  _react2.default.createElement(\n\t                    _Title2.default,\n\t                    null,\n\t                    'Elements'\n\t                  )\n\t                )\n\t              ),\n\t              _react2.default.createElement(\n\t                _reactBsGrid.Row,\n\t                null,\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { lg: 8 },\n\t                  _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'Potion Elements are presentational React components that render the building blocks of visualizations. They all render SVG by default but this can be overridden using component injection. The prop names are designed to be as similar to the API of native SVG and D3 generators.'\n\t                  ),\n\t                  _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'Use these in combination with ',\n\t                    _react2.default.createElement(\n\t                      _gatsbyLink2.default,\n\t                      { to: '/layout' },\n\t                      'Potion Layouts'\n\t                    ),\n\t                    ' and other utilities to construct custom animated  visualizations from the ground up.'\n\t                  )\n\t                ),\n\t                _react2.default.createElement(_Space2.default, { half: true })\n\t              ),\n\t              _react2.default.createElement(\n\t                _reactBsGrid.Row,\n\t                null,\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('arc') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Arc'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Arc, {\n\t                          innerRadius: 0,\n\t                          outerRadius: height / 3,\n\t                          startAngle: Math.PI / 3,\n\t                          endAngle: Math.PI / 3 * 2,\n\t                          fill: _constants.COLORS.DARK_GREY,\n\t                          transform: {\n\t                            translate: [sideLength / 3, height / 2]\n\t                          }\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('area') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Area'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Area, {\n\t                          x: function x(d) {\n\t                            return d.x;\n\t                          },\n\t                          y1: function y1(d) {\n\t                            return d.y1;\n\t                          },\n\t                          y0: height * 0.8,\n\t                          points: [{ x: sideLength * 0.1, y1: height * 0.2 }, { x: sideLength * 0.3, y1: height * 0.4 }, { x: sideLength * 0.4, y1: height * 0.3 }, { x: sideLength * 0.5, y1: height * 0.7 }, { x: sideLength * 0.7, y1: height * 0.4 }, { x: sideLength * 0.9, y1: height * 0.5 }],\n\t                          fill: _constants.COLORS.DARK_GREY\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('areaRadial') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'AreaRadial'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.AreaRadial, {\n\t                          angle: function angle(d) {\n\t                            return d.angle;\n\t                          },\n\t                          outerRadius: function outerRadius(d) {\n\t                            return d.outerRadius;\n\t                          },\n\t                          innerRadius: height * 0.1,\n\t                          points: [{ angle: 0, outerRadius: height * 0.3 }, { angle: Math.PI * 0.25, outerRadius: height * 0.2 }, { angle: Math.PI * 0.5, outerRadius: height * 0.3 }, { angle: Math.PI * 0.75, outerRadius: height * 0.2 }, { angle: Math.PI, outerRadius: height * 0.3 }, { angle: Math.PI * 1.25, outerRadius: height * 0.2 }, { angle: Math.PI * 1.5, outerRadius: height * 0.3 }, { angle: Math.PI * 1.75, outerRadius: height * 0.2 }, { angle: Math.PI * 2, outerRadius: height * 0.3 }],\n\t                          fill: _constants.COLORS.DARK_GREY,\n\t                          transform: {\n\t                            translate: [sideLength / 2, height / 2]\n\t                          }\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('circle') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Circle'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Circle, {\n\t                          cx: sideLength / 2,\n\t                          cy: height / 2,\n\t                          r: 50,\n\t                          fill: _constants.COLORS.DARK_GREY\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('line') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Line'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Line, {\n\t                          x1: sideLength / 3,\n\t                          y1: height / 3,\n\t                          x2: sideLength / 3 * 2,\n\t                          y2: height / 3 * 2,\n\t                          stroke: _constants.COLORS.DARK_GREY,\n\t                          strokeWidth: 4\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('lineRadial') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'LineRadial'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.LineRadial, {\n\t                          fill: 'none',\n\t                          stroke: _constants.COLORS.DARK_GREY,\n\t                          points: [[0, 50], [Math.PI * 0.25, 50], [Math.PI * 0.5, 50], [Math.PI * 0.75, 50], [Math.PI, 50], [Math.PI * 1.25, 50], [Math.PI * 1.5, 50], [Math.PI * 1.75, 50], [Math.PI * 2, 50]],\n\t                          strokeWidth: 4,\n\t                          transform: {\n\t                            translate: [sideLength / 2, height / 2]\n\t                          }\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('rect') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Rect'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Rect, {\n\t                          x: sideLength / 3,\n\t                          y: height / 3,\n\t                          width: sideLength / 3,\n\t                          height: height / 3,\n\t                          fill: _constants.COLORS.DARK_GREY\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('ribbon') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Ribbon'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.Ribbon, {\n\t                          source: {\n\t                            startAngle: 0.7524114,\n\t                            endAngle: 1.1212972,\n\t                            radius: height * 0.4\n\t                          },\n\t                          target: {\n\t                            startAngle: 1.8617078,\n\t                            endAngle: 1.9842927,\n\t                            radius: height * 0.4\n\t                          },\n\t                          fill: _constants.COLORS.DARK_GREY,\n\t                          transform: {\n\t                            translate: [sideLength / 3, height / 2]\n\t                          }\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('symbolShape') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'SymbolShape'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(_element.SymbolShape, {\n\t                          type: 'symbolCross',\n\t                          fill: _constants.COLORS.DARK_GREY,\n\t                          size: 2000,\n\t                          transform: {\n\t                            translate: [sideLength / 2, height / 2]\n\t                          }\n\t                        })\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _reactBsGrid.Col,\n\t                  { md: 4, sm: 6 },\n\t                  _react2.default.createElement(\n\t                    'a',\n\t                    { onClick: this.scrollTo('text') },\n\t                    _react2.default.createElement(\n\t                      'h3',\n\t                      null,\n\t                      'Text'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'chart' },\n\t                      _react2.default.createElement(\n\t                        _element.Svg,\n\t                        { width: sideLength, height: height },\n\t                        _react2.default.createElement(\n\t                          _element.Text,\n\t                          {\n\t                            dx: sideLength / 2,\n\t                            dy: height / 2,\n\t                            fill: _constants.COLORS.DARK_GREY,\n\t                            fontSize: 30,\n\t                            textAnchor: 'middle',\n\t                            alignmentBaseline: 'middle'\n\t                          },\n\t                          'Lorem ipsum'\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              _react2.default.createElement(\n\t                'div',\n\t                { className: 'page page-docs' },\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'content' },\n\t                  _react2.default.createElement('div', {\n\t                    dangerouslySetInnerHTML: {\n\t                      __html: this.getDocs()\n\t                    }\n\t                  })\n\t                )\n\t              ),\n\t              _react2.default.createElement(_Space2.default, null),\n\t              _react2.default.createElement(_Space2.default, null)\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return Element;\n\t}(_react.Component);\n\t\n\texports.default = (0, _reactWindowSize2.default)(Element);\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-element-js-0e7d8e2f1c10a7192426.js","/* global graphql */\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bs-grid';\nimport BodyClassName from 'react-body-classname';\nimport Helmet from 'react-helmet';\nimport { ChevronUp } from 'react-feather';\nimport {\n  Svg,\n  Circle,\n  Rect,\n  Arc,\n  Line,\n  SymbolShape,\n  Text,\n  LineRadial,\n  Area,\n  AreaRadial,\n  Ribbon,\n} from '@potion/element';\nimport Link from 'gatsby-link';\nimport WindowSize from 'react-window-size';\nimport get from 'lodash/get';\nimport { Fab, FabButton } from 'react-fab';\n\nimport Space from '../components/Space';\nimport Title from '../components/Title';\nimport Page from '../components/Page';\nimport { COLORS } from '../constants';\n\nclass Element extends Component {\n  componentDidMount() {\n    if (Prism) Prism.highlightAll();\n  }\n\n  getSideLength() {\n    const { windowWidth } = this.props;\n    let sideLength = 340;\n    if (windowWidth < 1200) sideLength = 270;\n    if (windowWidth < 992) sideLength = 210;\n    if (windowWidth < 768) sideLength = 258;\n    if (windowWidth < 570) sideLength = windowWidth - 100;\n    if (windowWidth === 0) sideLength = 340;\n    return sideLength;\n  }\n\n  getDocs() {\n    const edges = get(this.props, 'data.allMarkdownRemark.edges');\n    if (!edges) return '';\n    const { html } = edges.filter(edge => edge.node.html.indexOf('name=\"elements\"') > -1)[0].node;\n    return html.slice(html.indexOf('<h2>'));\n  }\n\n  scrollTo(key) {\n    return () => {\n      document.querySelector(`[name=\"elements__${key}\"]`).scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'nearest',\n      });\n    };\n  }\n\n  render() {\n    const sideLength = this.getSideLength();\n    const height = (sideLength / 3) * 2;\n    return (\n      <BodyClassName className={'no-padding'}>\n        <Page fluid name=\"page-build\">\n          <Helmet\n            title=\"Potion.js - React + D3\"\n            meta={[\n              {\n                property: 'og:url',\n                content: 'http://numberpicture.com/build',\n              },\n              {\n                property: 'og:title',\n                content: 'Potion.js - React + D3',\n              },\n              {\n                property: 'og:description',\n                content: 'Low-level React components for declaratively composing animated, interactive SVG visualizations.',\n              },\n              {\n                name: 'twitter:title',\n                content: 'Potion.js - React + D3',\n              },\n              {\n                name: 'twitter:description',\n                content: 'Low-level React components for declaratively composing animated, interactive SVG visualizations.',\n              },\n              {\n                charSet: 'utf-8',\n              },\n            ]}\n          />\n\n          <Fab style={{ right: '20px', bottom: '20px' }}>\n            <FabButton>\n              <a onClick={this.scrollTo('top')}>\n                <ChevronUp />\n              </a>\n            </FabButton>\n          </Fab>\n\n          <Container fluid>\n            <Row>\n              <Container>\n                <Row>\n                  <Col lg={12}>\n                    <div name=\"elements__top\" />\n                    <Title>Elements</Title>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col lg={8}>\n                    <p>Potion Elements are presentational React components that render the building blocks of visualizations. They all render SVG by default but this can be overridden using component injection. The prop names are designed to be as similar to the API of native SVG and D3 generators.</p>\n                    <p>Use these in combination with <Link to=\"/layout\">Potion Layouts</Link> and other utilities to construct custom animated  visualizations from the ground up.</p>\n                  </Col>\n                  <Space half />\n                </Row>\n\n                <Row>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('arc')}>\n                      <h3>Arc</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Arc\n                            innerRadius={0}\n                            outerRadius={height / 3}\n                            startAngle={Math.PI / 3}\n                            endAngle={(Math.PI / 3) * 2}\n                            fill={COLORS.DARK_GREY}\n                            transform={{\n                              translate: [sideLength / 3, height / 2],\n                            }}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('area')}>\n                      <h3>Area</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Area\n                            x={d => d.x}\n                            y1={d => d.y1}\n                            y0={height * 0.8}\n                            points={[\n                              { x: sideLength * 0.1, y1: height * 0.2 },\n                              { x: sideLength * 0.3, y1: height * 0.4 },\n                              { x: sideLength * 0.4, y1: height * 0.3 },\n                              { x: sideLength * 0.5, y1: height * 0.7 },\n                              { x: sideLength * 0.7, y1: height * 0.4 },\n                              { x: sideLength * 0.9, y1: height * 0.5 },\n                            ]}\n                            fill={COLORS.DARK_GREY}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('areaRadial')}>\n                      <h3>AreaRadial</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <AreaRadial\n                            angle={d => d.angle}\n                            outerRadius={d => d.outerRadius}\n                            innerRadius={height * 0.1}\n                            points={[\n                              { angle: 0, outerRadius: height * 0.3 },\n                              { angle: Math.PI * 0.25, outerRadius: height * 0.2 },\n                              { angle: Math.PI * 0.5, outerRadius: height * 0.3 },\n                              { angle: Math.PI * 0.75, outerRadius: height * 0.2 },\n                              { angle: Math.PI, outerRadius: height * 0.3 },\n                              { angle: Math.PI * 1.25, outerRadius: height * 0.2 },\n                              { angle: Math.PI * 1.5, outerRadius: height * 0.3 },\n                              { angle: Math.PI * 1.75, outerRadius: height * 0.2 },\n                              { angle: Math.PI * 2, outerRadius: height * 0.3 },\n                            ]}\n                            fill={COLORS.DARK_GREY}\n                            transform={{\n                              translate: [sideLength / 2, height / 2],\n                            }}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('circle')}>\n                      <h3>Circle</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Circle\n                            cx={sideLength / 2}\n                            cy={height / 2}\n                            r={50}\n                            fill={COLORS.DARK_GREY}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('line')}>\n                      <h3>Line</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Line\n                            x1={sideLength / 3}\n                            y1={height / 3}\n                            x2={(sideLength / 3) * 2}\n                            y2={(height / 3) * 2}\n                            stroke={COLORS.DARK_GREY}\n                            strokeWidth={4}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('lineRadial')}>\n                      <h3>LineRadial</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <LineRadial\n                            fill=\"none\"\n                            stroke={COLORS.DARK_GREY}\n                            points={[\n                              [0, 50],\n                              [Math.PI * 0.25, 50],\n                              [Math.PI * 0.5, 50],\n                              [Math.PI * 0.75, 50],\n                              [Math.PI, 50],\n                              [Math.PI * 1.25, 50],\n                              [Math.PI * 1.5, 50],\n                              [Math.PI * 1.75, 50],\n                              [Math.PI * 2, 50],\n                            ]}\n                            strokeWidth={4}\n                            transform={{\n                              translate: [sideLength / 2, height / 2],\n                            }}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('rect')}>\n                      <h3>Rect</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Rect\n                            x={sideLength / 3}\n                            y={height / 3}\n                            width={sideLength / 3}\n                            height={height / 3}\n                            fill={COLORS.DARK_GREY}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('ribbon')}>\n                      <h3>Ribbon</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Ribbon\n                            source={{\n                              startAngle: 0.7524114,\n                              endAngle: 1.1212972,\n                              radius: height * 0.4,\n                            }}\n                            target={{\n                              startAngle: 1.8617078,\n                              endAngle: 1.9842927,\n                              radius: height * 0.4,\n                            }}\n                            fill={COLORS.DARK_GREY}\n                            transform={{\n                              translate: [sideLength / 3, height / 2],\n                            }}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('symbolShape')}>\n                      <h3>SymbolShape</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <SymbolShape\n                            type=\"symbolCross\"\n                            fill={COLORS.DARK_GREY}\n                            size={2000}\n                            transform={{\n                              translate: [sideLength / 2, height / 2],\n                            }}\n                          />\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                  <Col md={4} sm={6}>\n                    <a onClick={this.scrollTo('text')}>\n                      <h3>Text</h3>\n                      <div className=\"chart\">\n                        <Svg width={sideLength} height={height}>\n                          <Text\n                            dx={sideLength / 2}\n                            dy={height / 2}\n                            fill={COLORS.DARK_GREY}\n                            fontSize={30}\n                            textAnchor=\"middle\"\n                            alignmentBaseline=\"middle\"\n                          >\n                            Lorem ipsum\n                          </Text>\n                        </Svg>\n                      </div>\n                    </a>\n                  </Col>\n\n                </Row>\n\n                <div className=\"page page-docs\">\n                  <div className=\"content\">\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: this.getDocs(),\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <Space />\n                <Space />\n\n              </Container>\n            </Row>\n          </Container>\n        </Page>\n      </BodyClassName>\n    );\n  }\n}\n\nexport default WindowSize(Element);\n\nexport const pageQuery = graphql`\n  query ElementQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          html\n          headings {\n            depth\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/element.js"],"sourceRoot":""}